# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def longestConsecutive(self, root) -> int:
        self.res = 0
        
        def dfs(root):
            # nonlocal res
            if root == None:        
                return (0, 0)
            inr, dcr = 1, 1
            if root.left:
                l = dfs(root.left)
                if root.val == root.left.val + 1:
                    dcr = l[1] + 1
                elif root.val == root.left.val - 1:
                    inr = l[0] + 1
                    
            if root.right:
                r = dfs(root.right)
                if root.val == root.right.val + 1:
                    dcr = r[1] + 1
                elif root.val == root.right.val - 1:
                    inr = r[0] + 1
            self.res = max(self.res, dcr + inr - 1)
            return (inr, dcr)


        dfs(root)
        return self.res